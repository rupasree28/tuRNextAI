/**
 * @license
 * SPDX-License-Identifier: Apache-2.0
*/

import React from 'react';
import { Activity } from '../types';
import { ChartIcon } from './icons';

interface RecentActivitiesScreenProps {
    activities: Activity[];
    onBack: () => void;
    onNavigateToDashboard: () => void;
}

const RecentActivitiesScreen: React.FC<RecentActivitiesScreenProps> = ({ activities, onBack, onNavigateToDashboard }) => {

    const categoryStyles: { [key: string]: string } = {
        'Puzzle': 'bg-purple-50 border-purple-500 text-purple-600',
        'Debate': 'bg-purple-50 border-purple-500 text-purple-600',
        'Design Task': 'bg-purple-50 border-purple-500 text-purple-600',
        'Jam': 'bg-teal-50 border-teal-500 text-teal-600',
        'Try & Analyze': 'bg-cyan-50 border-cyan-500 text-cyan-600',
        'Quiz': 'bg-lime-50 border-lime-500 text-lime-600',
        'Image Puzzle': 'bg-rose-50 border-rose-500 text-rose-600',
        'Odd-One-Out': 'bg-indigo-50 border-indigo-500 text-indigo-600',
        'Listening Practice': 'bg-amber-50 border-amber-500 text-amber-600',
        'NeuroLearn': 'bg-pink-50 border-pink-500 text-pink-600',
    };

    const getCategoryStyle = (sectionName: string) => {
        for (const key in categoryStyles) {
            if (sectionName.includes(key)) {
                return categoryStyles[key];
            }
        }
        return 'bg-gray-50 border-gray-500 text-gray-600';
    }

    return (
        <div className="w-full max-w-4xl animate-fade-in self-start mt-24">
            <button onClick={onBack} className="flex items-center text-gray-200 font-semibold hover:text-white mb-4 transition-colors opacity-80 hover:opacity-100">
                &larr; Back
            </button>
            {/* FIX: Safelist dynamic Tailwind classes to ensure they are generated by the JIT compiler. */}
            <div className="hidden">
                <span className="bg-purple-50 border-purple-500 text-purple-600"></span>
                <span className="bg-teal-50 border-teal-500 text-teal-600"></span>
                <span className="bg-cyan-50 border-cyan-500 text-cyan-600"></span>
                <span className="bg-lime-50 border-lime-500 text-lime-600"></span>
                <span className="bg-rose-50 border-rose-500 text-rose-600"></span>
                <span className="bg-indigo-50 border-indigo-500 text-indigo-600"></span>
                <span className="bg-amber-50 border-amber-500 text-amber-600"></span>
                <span className="bg-pink-50 border-pink-500 text-pink-600"></span>
            </div>
            <div className="bg-white/90 backdrop-blur-sm p-8 rounded-3xl shadow-2xl w-full border border-white/20">
                <div className="flex justify-between items-center mb-6">
                    <h1 className="text-4xl font-bold text-pink-500">Recent Activities</h1>
                    <button onClick={onNavigateToDashboard} className="bg-pink-500 text-white font-bold py-2 px-4 rounded-xl transition-all shadow-md hover:bg-pink-600 flex items-center gap-2">
                        <ChartIcon className="w-5 h-5" />
                        View Dashboard
                    </button>
                </div>
                {activities.length === 0 ? (
                    <p className="text-gray-500 text-center py-8">You haven't completed any activities yet. Go explore SparkIQ or NeuroLearn!</p>
                ) : (
                    <div className="space-y-4 max-h-[60vh] overflow-y-auto pr-4">
                        {activities.slice().reverse().map((activity, index) => {
                            const style = getCategoryStyle(activity.section);
                            return (
                                <div key={index} className={`p-4 rounded-lg shadow-md border-l-4 ${style}`}>
                                    <div className="flex justify-between items-center">
                                        <div className="flex flex-col">
                                            <h3 className={`text-xl font-bold`}>{activity.section}</h3>
                                            <p className="text-gray-700">{activity.outcome}</p>
                                        </div>
                                        <p className="text-sm text-gray-500">{activity.timestamp.toLocaleString()}</p>
                                    </div>
                                </div>
                            );
                        })}
                    </div>
                )}
            </div>
        </div>
    );
};

export default RecentActivitiesScreen;